# Generated by Django 3.2.8 on 2021-11-29 20:50

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('run_coach', models.CharField(max_length=13, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('apellido_p', models.CharField(max_length=50)),
                ('apellido_m', models.CharField(max_length=50)),
                ('telefono', models.IntegerField()),
                ('correo', models.CharField(max_length=50)),
                ('contrasena', models.CharField(max_length=200)),
                ('contrato', models.FloatField()),
            ],
            options={
                'db_table': 'coach',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Coachee',
            fields=[
                ('run_coachee', models.CharField(max_length=13, primary_key=True, serialize=False)),
                ('apellido_m', models.CharField(max_length=50)),
                ('nombre', models.CharField(max_length=50)),
                ('cargo', models.CharField(max_length=20)),
                ('apellido_p', models.CharField(max_length=50)),
                ('correo', models.CharField(max_length=50)),
                ('contrasena', models.CharField(max_length=200)),
                ('contrato', models.FloatField()),
            ],
            options={
                'db_table': 'coachee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Documentacion',
            fields=[
                ('id_doc', models.FloatField(primary_key=True, serialize=False)),
                ('archivo', models.TextField()),
                ('fecha_subida', models.DateField()),
                ('fecha_vista', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'documentacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('rut_empresa', models.CharField(max_length=13, primary_key=True, serialize=False)),
                ('direccion', models.CharField(max_length=30)),
                ('telefono', models.IntegerField()),
                ('nombre', models.CharField(max_length=30)),
                ('correo', models.CharField(max_length=50)),
                ('contrato', models.FloatField()),
                ('nombre_jefe', models.CharField(max_length=50)),
                ('correo_jefe', models.CharField(max_length=60)),
                ('telefono_jefe', models.IntegerField()),
            ],
            options={
                'db_table': 'empresa',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Encuesta',
            fields=[
                ('id_pregunta', models.FloatField(primary_key=True, serialize=False)),
                ('pregunta', models.CharField(max_length=20)),
                ('nota', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'encuesta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlanAccion',
            fields=[
                ('id_plan', models.FloatField(primary_key=True, serialize=False)),
                ('fecha', models.DateField()),
                ('tema', models.CharField(max_length=50)),
                ('accion', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'plan_accion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Proceso',
            fields=[
                ('id_proceso', models.FloatField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('modalidad', models.CharField(max_length=15)),
                ('status', models.CharField(max_length=50)),
                ('fecha_contrato', models.DateField()),
                ('clausula', models.TextField()),
                ('indicador_exito', models.CharField(max_length=200)),
                ('objetivo', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'proceso',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reunion',
            fields=[
                ('id_reunion', models.FloatField(primary_key=True, serialize=False)),
                ('fecha', models.DateField()),
                ('participante', models.TextField()),
                ('tipo_reunion', models.CharField(max_length=15)),
                ('observacion', models.CharField(blank=True, max_length=200, null=True)),
                ('antecedente_coachee', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reunion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sesion',
            fields=[
                ('id_sesion', models.IntegerField(primary_key=True, serialize=False)),
                ('fecha_acordada', models.DateField()),
                ('fecha_realizada', models.DateField(blank=True, null=True)),
                ('descripcion', models.CharField(max_length=200)),
                ('estado', models.FloatField()),
                ('asignacion_acuerdos', models.TextField()),
            ],
            options={
                'db_table': 'sesion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Evaluacion',
            fields=[
                ('id_encuesta', models.FloatField()),
                ('fecha', models.DateField()),
                ('comentario', models.CharField(blank=True, max_length=100, null=True)),
                ('promedio', models.FloatField(blank=True, null=True)),
                ('id_proceso', models.OneToOneField(db_column='id_proceso', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='eva_proceso', serialize=False, to='core.proceso')),
            ],
            options={
                'db_table': 'evaluacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is Admin')),
                ('is_coach', models.BooleanField(default=False, verbose_name='Is Coach')),
                ('is_coachee', models.BooleanField(default=False, verbose_name='Is Coachee')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
