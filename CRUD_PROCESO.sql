CREATE SEQUENCE SEQ_ERROR;

--LAS PARTES DEL RUT COACH, COACHEE Y EMPRESA ESTAN COMENTADAS YA QUE NO SE SI EL PROCESO SE DEBA ASIGNAR A ALGUIEN AUTOMATICAMENTE
--O SI SE HACE DESPUES EN EL UPDATE
CREATE OR REPLACE PROCEDURE SP_AGREGAR_PROCESO (
V_ID_PROCESO IN PROCESO.ID_PROCESO%TYPE, 
V_NOMBRE_PROCESO IN PROCESO.NOMBRE%TYPE, 
V_MODALIDAD IN PROCESO.MODALIDAD%TYPE, 
V_STATUS IN PROCESO.STATUS%TYPE, 
V_PLAN_ACCION IN PROCESO.PLAN_ACCION%TYPE, 
V_RUT_COACH IN PROCESO.COACH_RUN_COACH%TYPE, 
V_RUT_COACHEE IN PROCESO.COACHEE_RUN_COACHEE%TYPE,
V_RUT_EMPRESA IN PROCESO.EMPRESA_RUT_EMPRESA%TYPE,
v_salida OUT NUMBER) 
IS
BEGIN
INSERT INTO PROCESO (ID_PROCESO, NOMBRE, MODALIDAD, STATUS, PLAN_ACCION, COACH_RUN_COACH, COACHEE_RUN_COACHEE, EMPRESA_RUT_EMPRESA) 
VALUES (V_ID_PROCESO, V_NOMBRE_PROCESO, V_MODALIDAD, V_STATUS, V_PLAN_ACCION, V_RUT_COACH, V_RUT_COACHEE, V_RUT_EMPRESA);
COMMIT;
v_salida:=0;
EXCEPTION
  WHEN DUP_VAL_ON_INDEX THEN
  RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error de dato duplicado');
  WHEN OTHERS THEN 
  v_salida:=0;
  RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error desconocido');
END;

------------------------LISTAR LOS PROCESOS DISPONIBLES------------------------
CREATE OR REPLACE PROCEDURE SP_LISTA_PROCESO (REG OUT SYS_REFCURSOR)
AS
BEGIN
OPEN REG FOR 
SELECT 
P.ID_PROCESO PROCESO, 
P.NOMBRE NOMBRE, 
P.MODALIDAD MODALIDAD, 
P.STATUS STATUS, 
C.RUN_COACH "COACH ASIGNADO", 
CO.RUN_COACHEE "COACHEE ASIGNADO",
E.RUT_EMPRESA "RUT EMPRESA"
FROM PROCESO P 
JOIN COACH C ON P.COACH_RUN_COACH = C.RUN_COACH
JOIN COACHEE CO ON P.COACH_RUN_COACH = CO.RUN_COACHEE
JOIN EMPRESA E ON P.EMPRESA_RUT_EMPRESA = RUT_EMPRESA
WHERE CO.CONTRATO = 1 AND C.CONTRATO = 1 AND E.CONTRATO = 1;
END;

-----------------------MODIFICAR EL PROCESO EN UNA FORMA GENERAL (NOMBRE Y COSAS POR EL ESTILO)---------------------------
CREATE OR REPLACE PROCEDURE SP_MODIFICAR_GENERAL_PROCESO (
V_ID_PROCESO IN PROCESO.ID_PROCESO%TYPE, 
V_NOMBRE_PROCESO IN PROCESO.NOMBRE%TYPE, 
V_MODALIDAD IN PROCESO.MODALIDAD%TYPE, 
V_STATUS IN PROCESO.STATUS%TYPE, 
V_PLAN_ACCION IN PROCESO.PLAN_ACCION%TYPE, 
V_RUT_COACH IN PROCESO.COACH_RUN_COACH%TYPE, 
V_RUT_COACHEE IN PROCESO.COACHEE_RUN_COACHEE%TYPE,
V_RUT_EMPRESA IN PROCESO.EMPRESA_RUT_EMPRESA%TYPE)
IS
BEGIN
UPDATE PROCESO SET 
NOMBRE = V_NOMBRE_PROCESO, 
MODALIDAD = V_MODALIDAD, 
STATUS = V_STATUS, 
PLAN_ACCION = V_PLAN_ACCION, 
COACH_RUN_COACH = V_RUT_COACH, 
COACHEE_RUN_COACHEE = V_RUT_COACHEE,
EMPRESA_RUT_EMPRESA = V_RUT_EMPRESA

WHERE ID_PROCESO = V_ID_PROCESO;
COMMIT;
EXCEPTION
  WHEN NO_DATA_FOUND THEN 
  RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error de dato no encontrado'); 
  WHEN OTHERS THEN 
  RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error desconocido');
END;

---------------------------------MODIFICAR EL STATUS DEL PROCESO-------------------------------------------
CREATE OR REPLACE PROCEDURE SP_MODIFICAR_STATUS_PROCESO (
V_ID_PROCESO IN PROCESO.ID_PROCESO%TYPE, 
V_STATUS IN PROCESO.STATUS%TYPE)
IS
BEGIN
UPDATE PROCESO SET 
STATUS = V_STATUS
WHERE ID_PROCESO = V_ID_PROCESO;
COMMIT;
EXCEPTION
  WHEN NO_DATA_FOUND THEN 
  RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error de dato no encontrado'); 
  WHEN OTHERS THEN 
  RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error desconocido');
END;

-------------------------------ASIGNAR COACH Y COACHEE, EMPRESA IGUAL SUPONGO---------------------------------------------
CREATE OR REPLACE PROCEDURE SP_MODIFICAR_ASIGNAR_USUARIOS_PROCESO (
V_ID_PROCESO IN PROCESO.ID_PROCESO%TYPE,
V_RUT_COACH IN PROCESO.COACH_RUN_COACH%TYPE, 
V_RUT_COACHEE IN PROCESO.COACHEE_RUN_COACHEE%TYPE,
V_RUT_EMPRESA IN PROCESO.EMPRESA_RUT_EMPRESA%TYPE)
IS
BEGIN
UPDATE PROCESO SET 
COACH_RUN_COACH = V_RUT_COACH, 
COACHEE_RUN_COACHEE = V_RUT_COACHEE,
EMPRESA_RUT_EMPRESA = V_RUT_EMPRESA

WHERE ID_PROCESO = V_ID_PROCESO;
COMMIT;
EXCEPTION
  WHEN NO_DATA_FOUND THEN 
  RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error de dato no encontrado'); 
  WHEN OTHERS THEN 
  RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error desconocido');
END;

--------------------------------ELIMINAR EL PROCESO DE RAIZ (DE LA BD)--------------------------------------------
CREATE OR REPLACE PROCEDURE SP_ELIMINAR_PROCESO (
V_ID_PROCESO IN PROCESO.ID_PROCESO%TYPE)
IS
BEGIN
DELETE FROM PROCESO WHERE ID_PROCESO = V_ID_PROCESO;
COMMIT;
EXCEPTION
  WHEN NO_DATA_FOUND THEN 
  RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error de dato no encontrado'); 
  WHEN OTHERS THEN 
  RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error desconocido');
END;